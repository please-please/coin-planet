name: Build and SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # 최신 버전의 checkout 액션 사용
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarQube 분석을 위해 전체 히스토리 필요

      # Java 환경 설정 (SonarQube Scanner에 필요)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Node.js 프로젝트인 경우 (필요에 따라 추가/제거)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 의존성 설치 및 빌드 (프로젝트에 맞게 수정)
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage

      - name: Build project
        run: npm run build

      # SonarQube 분석 실행
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Quality Gate 체크 (선택사항)
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Quality Gate 실패 시에도 워크플로우를 계속 진행하려면 아래 라인 추가
        # continue-on-error: true

      # Quality Gate 결과 출력
      - name: 'Example show SonarQube Quality Gate Status value'
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
